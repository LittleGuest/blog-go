// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-03-23 23:02:04.352953061 +0800 CST m=+0.209251985

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/admin/counts": {
            "get": {}
        },
        "/api/v1/admin/environments": {
            "get": {}
        },
        "/api/v1/admin/installations": {
            "post": {}
        },
        "/api/v1/admin/is_installed": {
            "get": {}
        },
        "/api/v1/admin/logs": {
            "get": {}
        },
        "/api/v1/admin/logs/clear": {
            "get": {}
        },
        "/api/v1/admin/logs/latest": {
            "get": {}
        },
        "/api/v1/admin/password/code": {
            "post": {}
        },
        "/api/v1/admin/password/reset": {
            "put": {}
        },
        "/api/v1/admin/posts": {
            "get": {},
            "post": {}
        },
        "/api/v1/admin/posts/": {
            "get": {}
        },
        "/api/v1/admin/posts/latest": {
            "get": {}
        },
        "/api/v1/admin/posts/status/": {
            "get": {}
        },
        "/api/v1/admin/users/profiles": {
            "get": {}
        },
        "/login": {
            "post": {}
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
